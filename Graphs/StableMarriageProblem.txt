#include<iostream>
#include<string.h>

#define N 4

using namespace std;

void StableMarriage(int pref[2*N][N]);
bool wPrefers_m_Over_m1(int pref[2*N][N], int w, int m, int m1);
void PrintMatchedPairs(int wPartner[N]);

void StableMarriage(int pref[2*N][N])
{
    int wPartner[N];
    bool mEngaged[N];
    
    memset(wPartner, -1, sizeof(wPartner));
    memset(mEngaged, false, sizeof(mEngaged));
    
    int freeCount = N;
    while(freeCount > 0)
    {
        int m;
        for(m = 0; m < N; ++m)  // get the first free man
            if(mEngaged[m] == false)
                break;  
                
        for(int i = 0; i < N && mEngaged[m] == false; ++i)
        {
            int w = pref[m][i];
            
            if(wPartner[w-N] == -1)
            {
                wPartner[w-N] = m;
                mEngaged[m] = true;
                freeCount--;
            }
            else
            {
                int m1 = wPartner[w-N];
                if(wPrefers_m_Over_m1(pref, w, m, m1))
                {
                    wPartner[w-N] = m;
                    mEngaged[m] = true;
                    mEngaged[m1] = false;
                }
            }
        }
    }
    PrintMatchedPairs(wPartner);
}

bool wPrefers_m_Over_m1(int pref[2*N][N], int w, int m, int m1)
{
    for(int i = 0; i < N; ++i)
    {
        if(pref[w][i] == m)
            return true;
        if(pref[w][i] == m1)
            return false;
    }
}

void PrintMatchedPairs(int wPartner[N])
{
    cout << "Woman  Man\n";
    for(int i = 0; i < N; ++i)
        cout<< i+N << "\t" << wPartner[i] << endl;
}

int main()
{
    int pref[2*N][N] = { {7, 5, 6, 4}, 
		{5, 4, 6, 7}, 
		{4, 5, 6, 7}, 
		{4, 5, 6, 7}, 
		{0, 1, 2, 3}, 
		{0, 1, 2, 3}, 
		{0, 1, 2, 3}, 
		{0, 1, 2, 3}, 
	};
                       
    StableMarriage(pref);
    
    return 0;
}