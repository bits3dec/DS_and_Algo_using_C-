#include<iostream>

using namespace std;

struct Graph
{
    int v;
    int e;
    int **adjMatrix;
};

Graph* CreateGraph(int v, int e)
{
    Graph* G = new Graph;
    
    G->v = v;
    G->e = e;
    G->adjMatrix = new int*[G->v];
    
    for(int i = 0; i < v; ++i)
        G->adjMatrix[i] = new int[v];
        
    return G;
}

void AddEdge(int u, int v, Graph* G)
{
    G->adjMatrix[u][v] = 1; //Directed graph
}

int FindDegree(Graph* G, int vertex)
{
    int degree = 0;
    
    for(int i = 0; i < G->v; ++i)
    {
        if(G->adjMatrix[i][vertex] == 1)
            degree++;
    }
    
    return degree;
}

int main()
{
    int v = 4;
    int e = 5;

    Graph* G = CreateGraph(v, e);
    
    AddEdge(0, 1, G);
    AddEdge(0, 2, G);
    AddEdge(0, 3, G);
    AddEdge(1, 3, G);
    AddEdge(2, 3, G);
    
    int vertex = 2;
    int degree = FindDegree(G, vertex);
    cout<<"The degree of the given vertex "<< vertex << " is: "<< degree;
    
    return 0;
}

